name: NPM Publish

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Install Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v1.3
        with:
          msbuild-architecture: x64

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Verify build environment
        shell: pwsh
        run: |
          python --version
          msbuild -version
          npx node-gyp --version

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
          cache-dependency-path: src/go/go.sum

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build Go files
        run: |
          pnpm run go:build
          pnpm run go:build-dll
          pnpm run build

      - name: Run tests
        run: pnpm test

      - name: Get commit messages
        id: get_commits
        shell: pwsh
        run: |
          $commits = git log --format=%s $(git describe --tags --abbrev=0)..HEAD
          "commits<<EOF" >> $env:GITHUB_OUTPUT
          $commits >> $env:GITHUB_OUTPUT
          "EOF" >> $env:GITHUB_OUTPUT

      - name: Determine version bump
        id: version_bump
        shell: pwsh
        run: |
          $commits = "${{ steps.get_commits.outputs.commits }}"
          if ($commits -match "^BREAKING CHANGE:|^[a-zA-Z0-9]*!:") {
            "bump=major" >> $env:GITHUB_OUTPUT
          } elseif ($commits -match "^feat:") {
            "bump=minor" >> $env:GITHUB_OUTPUT
          } else {
            "bump=patch" >> $env:GITHUB_OUTPUT
          }

      - name: Update version
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          pnpm version ${{ steps.version_bump.outputs.bump }} -m "chore(release): %s [skip ci]"

      - name: Push changes
        run: |
          git push
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}